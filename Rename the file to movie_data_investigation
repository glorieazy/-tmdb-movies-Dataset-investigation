{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "af8fe6ed",
   "metadata": {},
   "source": [
    "# Project: 'tmdb-movies' Dataset investigation\n",
    "### Table of content\n",
    "\n",
    "- Introduction\n",
    "- Data Wrangling\n",
    "- Exploratory Data Analysis\n",
    "- Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04e3fa03",
   "metadata": {},
   "source": [
    "# Introduction\n",
    "\n",
    "This project make use of the tmdb-movies dataset to investigate the interaction between different movies, its audience and the productions using characteristics in the Dataset. During the process, the dataset is check, clean, analysed and visualized to answer some posed questions which are underlisted. \n",
    "As conclusion the results of the analysis is comunicated including the limitations faced.\n",
    "\n",
    "- What is the trend of number of movies produced per year?\n",
    "- Are there more Profits than Losses in the Dataset?\n",
    "- What are the 10 longest movies and check if each make profits or loss?\n",
    "- What are the 10 most popular movies and their release dates, check also whether they end up in Profit or Loss?\n",
    "- What is the distribution of Average Returns by Months?\n",
    "- What are the top 10 years with highest average Returns and the least 10 years with lowest Average Returns?\n",
    "- Number of Movies Produced per Month grouped by return?\n",
    "- What is the correllation between the following Numberical Columns?\n",
    ". Popularity\n",
    ". Budget\n",
    ". Runtime\n",
    ". Vote_count and\n",
    " Returns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 224,
   "id": "057578e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#this cell contains the statements used to import the packages that will be used\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "sns.set_style('darkgrid')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "652132bf",
   "metadata": {},
   "source": [
    "## Data Wrangling\n",
    "\n",
    "This section consists of two parts. Namely; Data inspection and Data cleaning. On the inspection part, the dataset is inspected using certain operations and check for anomalies. Data cleaning on the other side get the data ready for exploratory analysis and insights\n",
    "\n",
    "### Data Inspection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "id": "cf3c0c0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#load Dataset as df\n",
    "df = pd.read_csv('tmdb-movies.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "ed149edc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10866, 21)"
      ]
     },
     "execution_count": 226,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the number of rows and columns and the data types\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "id": "ea38327e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10866 entries, 0 to 10865\n",
      "Data columns (total 21 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   id                    10866 non-null  int64  \n",
      " 1   imdb_id               10856 non-null  object \n",
      " 2   popularity            10866 non-null  float64\n",
      " 3   budget                10866 non-null  int64  \n",
      " 4   revenue               10866 non-null  int64  \n",
      " 5   original_title        10866 non-null  object \n",
      " 6   cast                  10790 non-null  object \n",
      " 7   homepage              2936 non-null   object \n",
      " 8   director              10822 non-null  object \n",
      " 9   tagline               8042 non-null   object \n",
      " 10  keywords              9373 non-null   object \n",
      " 11  overview              10862 non-null  object \n",
      " 12  runtime               10866 non-null  int64  \n",
      " 13  genres                10843 non-null  object \n",
      " 14  production_companies  9836 non-null   object \n",
      " 15  release_date          10866 non-null  object \n",
      " 16  vote_count            10866 non-null  int64  \n",
      " 17  vote_average          10866 non-null  float64\n",
      " 18  release_year          10866 non-null  int64  \n",
      " 19  budget_adj            10866 non-null  float64\n",
      " 20  revenue_adj           10866 non-null  float64\n",
      "dtypes: float64(4), int64(6), object(11)\n",
      "memory usage: 1.7+ MB\n"
     ]
    }
   ],
   "source": [
    "# check the information about the data\n",
    "# also to check for any missing values and duplicates\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd1a1851",
   "metadata": {},
   "source": [
    "This Dataset cointains 10866 rows and 21 columns. Meanwhile some of the columns consist of missing values. This will be taken care of as we preoceed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "0c347e9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>1.086600e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>66064.177434</td>\n",
       "      <td>0.646441</td>\n",
       "      <td>1.462570e+07</td>\n",
       "      <td>3.982332e+07</td>\n",
       "      <td>102.070863</td>\n",
       "      <td>217.389748</td>\n",
       "      <td>5.974922</td>\n",
       "      <td>2001.322658</td>\n",
       "      <td>1.755104e+07</td>\n",
       "      <td>5.136436e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>92130.136561</td>\n",
       "      <td>1.000185</td>\n",
       "      <td>3.091321e+07</td>\n",
       "      <td>1.170035e+08</td>\n",
       "      <td>31.381405</td>\n",
       "      <td>575.619058</td>\n",
       "      <td>0.935142</td>\n",
       "      <td>12.812941</td>\n",
       "      <td>3.430616e+07</td>\n",
       "      <td>1.446325e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>0.000065</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1960.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>10596.250000</td>\n",
       "      <td>0.207583</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>5.400000</td>\n",
       "      <td>1995.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>20669.000000</td>\n",
       "      <td>0.383856</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>2006.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>75610.000000</td>\n",
       "      <td>0.713817</td>\n",
       "      <td>1.500000e+07</td>\n",
       "      <td>2.400000e+07</td>\n",
       "      <td>111.000000</td>\n",
       "      <td>145.750000</td>\n",
       "      <td>6.600000</td>\n",
       "      <td>2011.000000</td>\n",
       "      <td>2.085325e+07</td>\n",
       "      <td>3.369710e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>417859.000000</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>4.250000e+08</td>\n",
       "      <td>2.781506e+09</td>\n",
       "      <td>900.000000</td>\n",
       "      <td>9767.000000</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>2015.000000</td>\n",
       "      <td>4.250000e+08</td>\n",
       "      <td>2.827124e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  id    popularity        budget       revenue       runtime  \\\n",
       "count   10866.000000  10866.000000  1.086600e+04  1.086600e+04  10866.000000   \n",
       "mean    66064.177434      0.646441  1.462570e+07  3.982332e+07    102.070863   \n",
       "std     92130.136561      1.000185  3.091321e+07  1.170035e+08     31.381405   \n",
       "min         5.000000      0.000065  0.000000e+00  0.000000e+00      0.000000   \n",
       "25%     10596.250000      0.207583  0.000000e+00  0.000000e+00     90.000000   \n",
       "50%     20669.000000      0.383856  0.000000e+00  0.000000e+00     99.000000   \n",
       "75%     75610.000000      0.713817  1.500000e+07  2.400000e+07    111.000000   \n",
       "max    417859.000000     32.985763  4.250000e+08  2.781506e+09    900.000000   \n",
       "\n",
       "         vote_count  vote_average  release_year    budget_adj   revenue_adj  \n",
       "count  10866.000000  10866.000000  10866.000000  1.086600e+04  1.086600e+04  \n",
       "mean     217.389748      5.974922   2001.322658  1.755104e+07  5.136436e+07  \n",
       "std      575.619058      0.935142     12.812941  3.430616e+07  1.446325e+08  \n",
       "min       10.000000      1.500000   1960.000000  0.000000e+00  0.000000e+00  \n",
       "25%       17.000000      5.400000   1995.000000  0.000000e+00  0.000000e+00  \n",
       "50%       38.000000      6.000000   2006.000000  0.000000e+00  0.000000e+00  \n",
       "75%      145.750000      6.600000   2011.000000  2.085325e+07  3.369710e+07  \n",
       "max     9767.000000      9.200000   2015.000000  4.250000e+08  2.827124e+09  "
      ]
     },
     "execution_count": 228,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check for data description to otain some mathematical concepts of the numerical columns\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08850693",
   "metadata": {},
   "source": [
    "The above table shows some statistical values of the numerical columns. For example, the maximum and minimum Budgets, Revenue and so on."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "id": "15e3a8e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>imdb_id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>cast</th>\n",
       "      <th>homepage</th>\n",
       "      <th>director</th>\n",
       "      <th>tagline</th>\n",
       "      <th>...</th>\n",
       "      <th>overview</th>\n",
       "      <th>runtime</th>\n",
       "      <th>genres</th>\n",
       "      <th>production_companies</th>\n",
       "      <th>release_date</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>135397</td>\n",
       "      <td>tt0369610</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>150000000</td>\n",
       "      <td>1513528810</td>\n",
       "      <td>Jurassic World</td>\n",
       "      <td>Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...</td>\n",
       "      <td>http://www.jurassicworld.com/</td>\n",
       "      <td>Colin Trevorrow</td>\n",
       "      <td>The park is open.</td>\n",
       "      <td>...</td>\n",
       "      <td>Twenty-two years after the events of Jurassic ...</td>\n",
       "      <td>124</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "      <td>Universal Studios|Amblin Entertainment|Legenda...</td>\n",
       "      <td>6/9/15</td>\n",
       "      <td>5562</td>\n",
       "      <td>6.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.379999e+08</td>\n",
       "      <td>1.392446e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>76341</td>\n",
       "      <td>tt1392190</td>\n",
       "      <td>28.419936</td>\n",
       "      <td>150000000</td>\n",
       "      <td>378436354</td>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...</td>\n",
       "      <td>http://www.madmaxmovie.com/</td>\n",
       "      <td>George Miller</td>\n",
       "      <td>What a Lovely Day.</td>\n",
       "      <td>...</td>\n",
       "      <td>An apocalyptic story set in the furthest reach...</td>\n",
       "      <td>120</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "      <td>Village Roadshow Pictures|Kennedy Miller Produ...</td>\n",
       "      <td>5/13/15</td>\n",
       "      <td>6185</td>\n",
       "      <td>7.1</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.379999e+08</td>\n",
       "      <td>3.481613e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>262500</td>\n",
       "      <td>tt2908446</td>\n",
       "      <td>13.112507</td>\n",
       "      <td>110000000</td>\n",
       "      <td>295238201</td>\n",
       "      <td>Insurgent</td>\n",
       "      <td>Shailene Woodley|Theo James|Kate Winslet|Ansel...</td>\n",
       "      <td>http://www.thedivergentseries.movie/#insurgent</td>\n",
       "      <td>Robert Schwentke</td>\n",
       "      <td>One Choice Can Destroy You</td>\n",
       "      <td>...</td>\n",
       "      <td>Beatrice Prior must confront her inner demons ...</td>\n",
       "      <td>119</td>\n",
       "      <td>Adventure|Science Fiction|Thriller</td>\n",
       "      <td>Summit Entertainment|Mandeville Films|Red Wago...</td>\n",
       "      <td>3/18/15</td>\n",
       "      <td>2480</td>\n",
       "      <td>6.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.012000e+08</td>\n",
       "      <td>2.716190e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>140607</td>\n",
       "      <td>tt2488496</td>\n",
       "      <td>11.173104</td>\n",
       "      <td>200000000</td>\n",
       "      <td>2068178225</td>\n",
       "      <td>Star Wars: The Force Awakens</td>\n",
       "      <td>Harrison Ford|Mark Hamill|Carrie Fisher|Adam D...</td>\n",
       "      <td>http://www.starwars.com/films/star-wars-episod...</td>\n",
       "      <td>J.J. Abrams</td>\n",
       "      <td>Every generation has a story.</td>\n",
       "      <td>...</td>\n",
       "      <td>Thirty years after defeating the Galactic Empi...</td>\n",
       "      <td>136</td>\n",
       "      <td>Action|Adventure|Science Fiction|Fantasy</td>\n",
       "      <td>Lucasfilm|Truenorth Productions|Bad Robot</td>\n",
       "      <td>12/15/15</td>\n",
       "      <td>5292</td>\n",
       "      <td>7.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.839999e+08</td>\n",
       "      <td>1.902723e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>168259</td>\n",
       "      <td>tt2820852</td>\n",
       "      <td>9.335014</td>\n",
       "      <td>190000000</td>\n",
       "      <td>1506249360</td>\n",
       "      <td>Furious 7</td>\n",
       "      <td>Vin Diesel|Paul Walker|Jason Statham|Michelle ...</td>\n",
       "      <td>http://www.furious7.com/</td>\n",
       "      <td>James Wan</td>\n",
       "      <td>Vengeance Hits Home</td>\n",
       "      <td>...</td>\n",
       "      <td>Deckard Shaw seeks revenge against Dominic Tor...</td>\n",
       "      <td>137</td>\n",
       "      <td>Action|Crime|Thriller</td>\n",
       "      <td>Universal Pictures|Original Film|Media Rights ...</td>\n",
       "      <td>4/1/15</td>\n",
       "      <td>2947</td>\n",
       "      <td>7.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.747999e+08</td>\n",
       "      <td>1.385749e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       id    imdb_id  popularity     budget     revenue  \\\n",
       "0  135397  tt0369610   32.985763  150000000  1513528810   \n",
       "1   76341  tt1392190   28.419936  150000000   378436354   \n",
       "2  262500  tt2908446   13.112507  110000000   295238201   \n",
       "3  140607  tt2488496   11.173104  200000000  2068178225   \n",
       "4  168259  tt2820852    9.335014  190000000  1506249360   \n",
       "\n",
       "                 original_title  \\\n",
       "0                Jurassic World   \n",
       "1            Mad Max: Fury Road   \n",
       "2                     Insurgent   \n",
       "3  Star Wars: The Force Awakens   \n",
       "4                     Furious 7   \n",
       "\n",
       "                                                cast  \\\n",
       "0  Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...   \n",
       "1  Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...   \n",
       "2  Shailene Woodley|Theo James|Kate Winslet|Ansel...   \n",
       "3  Harrison Ford|Mark Hamill|Carrie Fisher|Adam D...   \n",
       "4  Vin Diesel|Paul Walker|Jason Statham|Michelle ...   \n",
       "\n",
       "                                            homepage          director  \\\n",
       "0                      http://www.jurassicworld.com/   Colin Trevorrow   \n",
       "1                        http://www.madmaxmovie.com/     George Miller   \n",
       "2     http://www.thedivergentseries.movie/#insurgent  Robert Schwentke   \n",
       "3  http://www.starwars.com/films/star-wars-episod...       J.J. Abrams   \n",
       "4                           http://www.furious7.com/         James Wan   \n",
       "\n",
       "                         tagline  ...  \\\n",
       "0              The park is open.  ...   \n",
       "1             What a Lovely Day.  ...   \n",
       "2     One Choice Can Destroy You  ...   \n",
       "3  Every generation has a story.  ...   \n",
       "4            Vengeance Hits Home  ...   \n",
       "\n",
       "                                            overview runtime  \\\n",
       "0  Twenty-two years after the events of Jurassic ...     124   \n",
       "1  An apocalyptic story set in the furthest reach...     120   \n",
       "2  Beatrice Prior must confront her inner demons ...     119   \n",
       "3  Thirty years after defeating the Galactic Empi...     136   \n",
       "4  Deckard Shaw seeks revenge against Dominic Tor...     137   \n",
       "\n",
       "                                      genres  \\\n",
       "0  Action|Adventure|Science Fiction|Thriller   \n",
       "1  Action|Adventure|Science Fiction|Thriller   \n",
       "2         Adventure|Science Fiction|Thriller   \n",
       "3   Action|Adventure|Science Fiction|Fantasy   \n",
       "4                      Action|Crime|Thriller   \n",
       "\n",
       "                                production_companies release_date vote_count  \\\n",
       "0  Universal Studios|Amblin Entertainment|Legenda...       6/9/15       5562   \n",
       "1  Village Roadshow Pictures|Kennedy Miller Produ...      5/13/15       6185   \n",
       "2  Summit Entertainment|Mandeville Films|Red Wago...      3/18/15       2480   \n",
       "3          Lucasfilm|Truenorth Productions|Bad Robot     12/15/15       5292   \n",
       "4  Universal Pictures|Original Film|Media Rights ...       4/1/15       2947   \n",
       "\n",
       "   vote_average  release_year    budget_adj   revenue_adj  \n",
       "0           6.5          2015  1.379999e+08  1.392446e+09  \n",
       "1           7.1          2015  1.379999e+08  3.481613e+08  \n",
       "2           6.3          2015  1.012000e+08  2.716190e+08  \n",
       "3           7.5          2015  1.839999e+08  1.902723e+09  \n",
       "4           7.3          2015  1.747999e+08  1.385749e+09  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 229,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#display few elements of the dataset\n",
    "\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3695436",
   "metadata": {},
   "source": [
    "## Data Cleaning\n",
    "\n",
    "After the dataset is thoroughly wrangled, and some anomalies are detected. the next important step is to \n",
    "clean the dataset to make it best suited to explore. Here, some less important columns will be dropped,\n",
    "duplicates will also be removed as far as they contain similar details. However, new columns will be created to further give more exploratory details. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "id": "a7d11bff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10865"
      ]
     },
     "execution_count": 230,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check for duplicates\n",
    "\n",
    "df['id'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c15cbe6c",
   "metadata": {},
   "source": [
    "There are 10865 unique id values out of the total 10866 inputs.\n",
    "That means a row is duplicated."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "id": "1cdd6aca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42194     2\n",
       "16384     1\n",
       "745       1\n",
       "17037     1\n",
       "72334     1\n",
       "         ..\n",
       "11615     1\n",
       "251232    1\n",
       "112205    1\n",
       "101731    1\n",
       "9600      1\n",
       "Name: id, Length: 10865, dtype: int64"
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#further inspection to fix out the duplicated row\n",
    "\n",
    "df['id'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "305245d4",
   "metadata": {},
   "source": [
    "It can be seen above that id_number 42194 is duplicated"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "id": "e8bf61e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>imdb_id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>cast</th>\n",
       "      <th>homepage</th>\n",
       "      <th>director</th>\n",
       "      <th>tagline</th>\n",
       "      <th>...</th>\n",
       "      <th>overview</th>\n",
       "      <th>runtime</th>\n",
       "      <th>genres</th>\n",
       "      <th>production_companies</th>\n",
       "      <th>release_date</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2089</th>\n",
       "      <td>42194</td>\n",
       "      <td>tt0411951</td>\n",
       "      <td>0.59643</td>\n",
       "      <td>30000000</td>\n",
       "      <td>967000</td>\n",
       "      <td>TEKKEN</td>\n",
       "      <td>Jon Foo|Kelly Overton|Cary-Hiroyuki Tagawa|Ian...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dwight H. Little</td>\n",
       "      <td>Survival is no game</td>\n",
       "      <td>...</td>\n",
       "      <td>In the year of 2039, after World Wars destroy ...</td>\n",
       "      <td>92</td>\n",
       "      <td>Crime|Drama|Action|Thriller|Science Fiction</td>\n",
       "      <td>Namco|Light Song Films</td>\n",
       "      <td>3/20/10</td>\n",
       "      <td>110</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2010</td>\n",
       "      <td>30000000.0</td>\n",
       "      <td>967000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2090</th>\n",
       "      <td>42194</td>\n",
       "      <td>tt0411951</td>\n",
       "      <td>0.59643</td>\n",
       "      <td>30000000</td>\n",
       "      <td>967000</td>\n",
       "      <td>TEKKEN</td>\n",
       "      <td>Jon Foo|Kelly Overton|Cary-Hiroyuki Tagawa|Ian...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dwight H. Little</td>\n",
       "      <td>Survival is no game</td>\n",
       "      <td>...</td>\n",
       "      <td>In the year of 2039, after World Wars destroy ...</td>\n",
       "      <td>92</td>\n",
       "      <td>Crime|Drama|Action|Thriller|Science Fiction</td>\n",
       "      <td>Namco|Light Song Films</td>\n",
       "      <td>3/20/10</td>\n",
       "      <td>110</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2010</td>\n",
       "      <td>30000000.0</td>\n",
       "      <td>967000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         id    imdb_id  popularity    budget  revenue original_title  \\\n",
       "2089  42194  tt0411951     0.59643  30000000   967000         TEKKEN   \n",
       "2090  42194  tt0411951     0.59643  30000000   967000         TEKKEN   \n",
       "\n",
       "                                                   cast homepage  \\\n",
       "2089  Jon Foo|Kelly Overton|Cary-Hiroyuki Tagawa|Ian...      NaN   \n",
       "2090  Jon Foo|Kelly Overton|Cary-Hiroyuki Tagawa|Ian...      NaN   \n",
       "\n",
       "              director              tagline  ...  \\\n",
       "2089  Dwight H. Little  Survival is no game  ...   \n",
       "2090  Dwight H. Little  Survival is no game  ...   \n",
       "\n",
       "                                               overview runtime  \\\n",
       "2089  In the year of 2039, after World Wars destroy ...      92   \n",
       "2090  In the year of 2039, after World Wars destroy ...      92   \n",
       "\n",
       "                                           genres    production_companies  \\\n",
       "2089  Crime|Drama|Action|Thriller|Science Fiction  Namco|Light Song Films   \n",
       "2090  Crime|Drama|Action|Thriller|Science Fiction  Namco|Light Song Films   \n",
       "\n",
       "     release_date vote_count  vote_average  release_year  budget_adj  \\\n",
       "2089      3/20/10        110           5.0          2010  30000000.0   \n",
       "2090      3/20/10        110           5.0          2010  30000000.0   \n",
       "\n",
       "      revenue_adj  \n",
       "2089     967000.0  \n",
       "2090     967000.0  \n",
       "\n",
       "[2 rows x 21 columns]"
      ]
     },
     "execution_count": 232,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# now we check for their columns identities\n",
    "\n",
    "df[df['id'] == 42194]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "id": "a90f7548",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>imdb_id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>cast</th>\n",
       "      <th>homepage</th>\n",
       "      <th>director</th>\n",
       "      <th>tagline</th>\n",
       "      <th>...</th>\n",
       "      <th>overview</th>\n",
       "      <th>runtime</th>\n",
       "      <th>genres</th>\n",
       "      <th>production_companies</th>\n",
       "      <th>release_date</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2090</th>\n",
       "      <td>42194</td>\n",
       "      <td>tt0411951</td>\n",
       "      <td>0.59643</td>\n",
       "      <td>30000000</td>\n",
       "      <td>967000</td>\n",
       "      <td>TEKKEN</td>\n",
       "      <td>Jon Foo|Kelly Overton|Cary-Hiroyuki Tagawa|Ian...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dwight H. Little</td>\n",
       "      <td>Survival is no game</td>\n",
       "      <td>...</td>\n",
       "      <td>In the year of 2039, after World Wars destroy ...</td>\n",
       "      <td>92</td>\n",
       "      <td>Crime|Drama|Action|Thriller|Science Fiction</td>\n",
       "      <td>Namco|Light Song Films</td>\n",
       "      <td>3/20/10</td>\n",
       "      <td>110</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2010</td>\n",
       "      <td>30000000.0</td>\n",
       "      <td>967000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         id    imdb_id  popularity    budget  revenue original_title  \\\n",
       "2090  42194  tt0411951     0.59643  30000000   967000         TEKKEN   \n",
       "\n",
       "                                                   cast homepage  \\\n",
       "2090  Jon Foo|Kelly Overton|Cary-Hiroyuki Tagawa|Ian...      NaN   \n",
       "\n",
       "              director              tagline  ...  \\\n",
       "2090  Dwight H. Little  Survival is no game  ...   \n",
       "\n",
       "                                               overview runtime  \\\n",
       "2090  In the year of 2039, after World Wars destroy ...      92   \n",
       "\n",
       "                                           genres    production_companies  \\\n",
       "2090  Crime|Drama|Action|Thriller|Science Fiction  Namco|Light Song Films   \n",
       "\n",
       "     release_date vote_count  vote_average  release_year  budget_adj  \\\n",
       "2090      3/20/10        110           5.0          2010  30000000.0   \n",
       "\n",
       "      revenue_adj  \n",
       "2090     967000.0  \n",
       "\n",
       "[1 rows x 21 columns]"
      ]
     },
     "execution_count": 233,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#to further confirm using an inbuilt function\n",
    "\n",
    "df[df.duplicated()]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4110b199",
   "metadata": {},
   "source": [
    "Since the two rows are identical in values and the duplicated function further confirms that, one is dropped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "id": "21274a3a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#drop the duplicated row \n",
    "\n",
    "df.drop_duplicates(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "id": "42f057c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10865, 21)"
      ]
     },
     "execution_count": 235,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check again the information of the dataset to comfirm if the duplicated column is dropped\n",
    "\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "id": "1d3a5525",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 10865 entries, 0 to 10865\n",
      "Data columns (total 21 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   id                    10865 non-null  int64  \n",
      " 1   imdb_id               10855 non-null  object \n",
      " 2   popularity            10865 non-null  float64\n",
      " 3   budget                10865 non-null  int64  \n",
      " 4   revenue               10865 non-null  int64  \n",
      " 5   original_title        10865 non-null  object \n",
      " 6   cast                  10789 non-null  object \n",
      " 7   homepage              2936 non-null   object \n",
      " 8   director              10821 non-null  object \n",
      " 9   tagline               8041 non-null   object \n",
      " 10  keywords              9372 non-null   object \n",
      " 11  overview              10861 non-null  object \n",
      " 12  runtime               10865 non-null  int64  \n",
      " 13  genres                10842 non-null  object \n",
      " 14  production_companies  9835 non-null   object \n",
      " 15  release_date          10865 non-null  object \n",
      " 16  vote_count            10865 non-null  int64  \n",
      " 17  vote_average          10865 non-null  float64\n",
      " 18  release_year          10865 non-null  int64  \n",
      " 19  budget_adj            10865 non-null  float64\n",
      " 20  revenue_adj           10865 non-null  float64\n",
      "dtypes: float64(4), int64(6), object(11)\n",
      "memory usage: 1.8+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e614980",
   "metadata": {},
   "source": [
    "The Duplicated row has been sucessfully dropped."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "id": "dc28945d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                         0\n",
       "imdb_id                   10\n",
       "popularity                 0\n",
       "budget                     0\n",
       "revenue                    0\n",
       "original_title             0\n",
       "cast                      76\n",
       "homepage                7929\n",
       "director                  44\n",
       "tagline                 2824\n",
       "keywords                1493\n",
       "overview                   4\n",
       "runtime                    0\n",
       "genres                    23\n",
       "production_companies    1030\n",
       "release_date               0\n",
       "vote_count                 0\n",
       "vote_average               0\n",
       "release_year               0\n",
       "budget_adj                 0\n",
       "revenue_adj                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 237,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check for null values\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5837d24f",
   "metadata": {},
   "source": [
    "There are few columns with large missing values. I will like to drop them to make the dataset more ready and suited based on the following reasons:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fcb1b092",
   "metadata": {},
   "source": [
    "     >> I remove the columns which are not really needed for this analysis. \n",
    "     >> I drop the director and genres columns because of large numbers of null values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "id": "722e8806",
   "metadata": {},
   "outputs": [],
   "source": [
    "#drop columns\n",
    "col_label = ['imdb_id', 'homepage', 'tagline', 'cast', 'overview', 'director', 'genres', 'keywords', 'production_companies', 'budget_adj',  'revenue_adj']\n",
    "\n",
    "df.drop(col_label, axis=1, inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "id": "e708ba67",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 10865 entries, 0 to 10865\n",
      "Data columns (total 10 columns):\n",
      " #   Column          Non-Null Count  Dtype  \n",
      "---  ------          --------------  -----  \n",
      " 0   id              10865 non-null  int64  \n",
      " 1   popularity      10865 non-null  float64\n",
      " 2   budget          10865 non-null  int64  \n",
      " 3   revenue         10865 non-null  int64  \n",
      " 4   original_title  10865 non-null  object \n",
      " 5   runtime         10865 non-null  int64  \n",
      " 6   release_date    10865 non-null  object \n",
      " 7   vote_count      10865 non-null  int64  \n",
      " 8   vote_average    10865 non-null  float64\n",
      " 9   release_year    10865 non-null  int64  \n",
      "dtypes: float64(2), int64(6), object(2)\n",
      "memory usage: 933.7+ KB\n"
     ]
    }
   ],
   "source": [
    "#check dataset new information\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cfa94d57",
   "metadata": {},
   "source": [
    "Now we have a cleaned data set with neither Duplicates nor null or missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "id": "0d70c1eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# convert the release_date column to time date \n",
    "\n",
    "df['release_date'] = pd.to_datetime(df['release_date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 241,
   "id": "3aa5760b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# new column named release_month will be created to know which month of the year irrespective of the year the movie is produced\n",
    "\n",
    "df['release_month'] = pd.DatetimeIndex(df['release_date']).month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 242,
   "id": "8f138101",
   "metadata": {},
   "outputs": [],
   "source": [
    "#convert the month from number form to month name form for better visualization\n",
    "\n",
    "month_num = [0,1,2,3,4,5,6,7,8,9,10,11,12]\n",
    "month_str = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n",
    "df['release_month1'] = pd.cut(df['release_month'], month_num, labels=month_str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 243,
   "id": "f6bf65cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>runtime</th>\n",
       "      <th>release_date</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>release_month</th>\n",
       "      <th>release_month1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>135397</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>150000000</td>\n",
       "      <td>1513528810</td>\n",
       "      <td>Jurassic World</td>\n",
       "      <td>124</td>\n",
       "      <td>2015-06-09</td>\n",
       "      <td>5562</td>\n",
       "      <td>6.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>6</td>\n",
       "      <td>June</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>76341</td>\n",
       "      <td>28.419936</td>\n",
       "      <td>150000000</td>\n",
       "      <td>378436354</td>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>120</td>\n",
       "      <td>2015-05-13</td>\n",
       "      <td>6185</td>\n",
       "      <td>7.1</td>\n",
       "      <td>2015</td>\n",
       "      <td>5</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>262500</td>\n",
       "      <td>13.112507</td>\n",
       "      <td>110000000</td>\n",
       "      <td>295238201</td>\n",
       "      <td>Insurgent</td>\n",
       "      <td>119</td>\n",
       "      <td>2015-03-18</td>\n",
       "      <td>2480</td>\n",
       "      <td>6.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>March</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>140607</td>\n",
       "      <td>11.173104</td>\n",
       "      <td>200000000</td>\n",
       "      <td>2068178225</td>\n",
       "      <td>Star Wars: The Force Awakens</td>\n",
       "      <td>136</td>\n",
       "      <td>2015-12-15</td>\n",
       "      <td>5292</td>\n",
       "      <td>7.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>12</td>\n",
       "      <td>December</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>168259</td>\n",
       "      <td>9.335014</td>\n",
       "      <td>190000000</td>\n",
       "      <td>1506249360</td>\n",
       "      <td>Furious 7</td>\n",
       "      <td>137</td>\n",
       "      <td>2015-04-01</td>\n",
       "      <td>2947</td>\n",
       "      <td>7.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>April</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id  popularity     budget     revenue                original_title  \\\n",
       "0  135397   32.985763  150000000  1513528810                Jurassic World   \n",
       "1   76341   28.419936  150000000   378436354            Mad Max: Fury Road   \n",
       "2  262500   13.112507  110000000   295238201                     Insurgent   \n",
       "3  140607   11.173104  200000000  2068178225  Star Wars: The Force Awakens   \n",
       "4  168259    9.335014  190000000  1506249360                     Furious 7   \n",
       "\n",
       "   runtime release_date  vote_count  vote_average  release_year  \\\n",
       "0      124   2015-06-09        5562           6.5          2015   \n",
       "1      120   2015-05-13        6185           7.1          2015   \n",
       "2      119   2015-03-18        2480           6.3          2015   \n",
       "3      136   2015-12-15        5292           7.5          2015   \n",
       "4      137   2015-04-01        2947           7.3          2015   \n",
       "\n",
       "   release_month release_month1  \n",
       "0              6           June  \n",
       "1              5            May  \n",
       "2              3          March  \n",
       "3             12       December  \n",
       "4              4          April  "
      ]
     },
     "execution_count": 243,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "id": "7996f7a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>runtime</th>\n",
       "      <th>release_date</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>release_month</th>\n",
       "      <th>release_month1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>280996</td>\n",
       "      <td>3.927333</td>\n",
       "      <td>0</td>\n",
       "      <td>29355203</td>\n",
       "      <td>Mr. Holmes</td>\n",
       "      <td>103</td>\n",
       "      <td>2015-06-19</td>\n",
       "      <td>425</td>\n",
       "      <td>6.4</td>\n",
       "      <td>2015</td>\n",
       "      <td>6</td>\n",
       "      <td>June</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>339527</td>\n",
       "      <td>3.358321</td>\n",
       "      <td>0</td>\n",
       "      <td>22354572</td>\n",
       "      <td>Solace</td>\n",
       "      <td>101</td>\n",
       "      <td>2015-09-03</td>\n",
       "      <td>474</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2015</td>\n",
       "      <td>9</td>\n",
       "      <td>September</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>284289</td>\n",
       "      <td>2.272044</td>\n",
       "      <td>0</td>\n",
       "      <td>45895</td>\n",
       "      <td>Beyond the Reach</td>\n",
       "      <td>95</td>\n",
       "      <td>2015-04-17</td>\n",
       "      <td>81</td>\n",
       "      <td>5.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>April</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>347096</td>\n",
       "      <td>2.165433</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Mythica: The Darkspore</td>\n",
       "      <td>108</td>\n",
       "      <td>2015-06-24</td>\n",
       "      <td>27</td>\n",
       "      <td>5.1</td>\n",
       "      <td>2015</td>\n",
       "      <td>6</td>\n",
       "      <td>June</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>308369</td>\n",
       "      <td>2.141506</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Me and Earl and the Dying Girl</td>\n",
       "      <td>105</td>\n",
       "      <td>2015-06-12</td>\n",
       "      <td>569</td>\n",
       "      <td>7.7</td>\n",
       "      <td>2015</td>\n",
       "      <td>6</td>\n",
       "      <td>June</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10860</th>\n",
       "      <td>5060</td>\n",
       "      <td>0.087034</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Carry On Screaming!</td>\n",
       "      <td>87</td>\n",
       "      <td>2066-05-20</td>\n",
       "      <td>13</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1966</td>\n",
       "      <td>5</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10861</th>\n",
       "      <td>21</td>\n",
       "      <td>0.080598</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>The Endless Summer</td>\n",
       "      <td>95</td>\n",
       "      <td>2066-06-15</td>\n",
       "      <td>11</td>\n",
       "      <td>7.4</td>\n",
       "      <td>1966</td>\n",
       "      <td>6</td>\n",
       "      <td>June</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10862</th>\n",
       "      <td>20379</td>\n",
       "      <td>0.065543</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Grand Prix</td>\n",
       "      <td>176</td>\n",
       "      <td>2066-12-21</td>\n",
       "      <td>20</td>\n",
       "      <td>5.7</td>\n",
       "      <td>1966</td>\n",
       "      <td>12</td>\n",
       "      <td>December</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10863</th>\n",
       "      <td>39768</td>\n",
       "      <td>0.065141</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Beregis Avtomobilya</td>\n",
       "      <td>94</td>\n",
       "      <td>2066-01-01</td>\n",
       "      <td>11</td>\n",
       "      <td>6.5</td>\n",
       "      <td>1966</td>\n",
       "      <td>1</td>\n",
       "      <td>January</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10864</th>\n",
       "      <td>21449</td>\n",
       "      <td>0.064317</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>What's Up, Tiger Lily?</td>\n",
       "      <td>80</td>\n",
       "      <td>2066-11-02</td>\n",
       "      <td>22</td>\n",
       "      <td>5.4</td>\n",
       "      <td>1966</td>\n",
       "      <td>11</td>\n",
       "      <td>November</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5696 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id  popularity  budget   revenue                  original_title  \\\n",
       "30     280996    3.927333       0  29355203                      Mr. Holmes   \n",
       "36     339527    3.358321       0  22354572                          Solace   \n",
       "72     284289    2.272044       0     45895                Beyond the Reach   \n",
       "74     347096    2.165433       0         0          Mythica: The Darkspore   \n",
       "75     308369    2.141506       0         0  Me and Earl and the Dying Girl   \n",
       "...       ...         ...     ...       ...                             ...   \n",
       "10860    5060    0.087034       0         0             Carry On Screaming!   \n",
       "10861      21    0.080598       0         0              The Endless Summer   \n",
       "10862   20379    0.065543       0         0                      Grand Prix   \n",
       "10863   39768    0.065141       0         0             Beregis Avtomobilya   \n",
       "10864   21449    0.064317       0         0          What's Up, Tiger Lily?   \n",
       "\n",
       "       runtime release_date  vote_count  vote_average  release_year  \\\n",
       "30         103   2015-06-19         425           6.4          2015   \n",
       "36         101   2015-09-03         474           6.2          2015   \n",
       "72          95   2015-04-17          81           5.5          2015   \n",
       "74         108   2015-06-24          27           5.1          2015   \n",
       "75         105   2015-06-12         569           7.7          2015   \n",
       "...        ...          ...         ...           ...           ...   \n",
       "10860       87   2066-05-20          13           7.0          1966   \n",
       "10861       95   2066-06-15          11           7.4          1966   \n",
       "10862      176   2066-12-21          20           5.7          1966   \n",
       "10863       94   2066-01-01          11           6.5          1966   \n",
       "10864       80   2066-11-02          22           5.4          1966   \n",
       "\n",
       "       release_month release_month1  \n",
       "30                 6           June  \n",
       "36                 9      September  \n",
       "72                 4          April  \n",
       "74                 6           June  \n",
       "75                 6           June  \n",
       "...              ...            ...  \n",
       "10860              5            May  \n",
       "10861              6           June  \n",
       "10862             12       December  \n",
       "10863              1        January  \n",
       "10864             11       November  \n",
       "\n",
       "[5696 rows x 12 columns]"
      ]
     },
     "execution_count": 244,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.query('budget == 0')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97f2e20f",
   "metadata": {},
   "source": [
    "The month of production is extracted and converted to Month Names in separate column. The release_month in number form, will be dropped because we already have month names."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 245,
   "id": "4470d5ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "#drop the column with just months numbers\n",
    "\n",
    "df.drop('release_month', axis=1, inplace=True)\n",
    "\n",
    "df.rename(columns={'release_month1':'release_month'}, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "152807df",
   "metadata": {},
   "source": [
    "Another important column i will like to create is the Returns column = Revenue - Budget"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "id": "22571eaa",
   "metadata": {},
   "outputs": [],
   "source": [
    "# creation of new column named returns = revenue - budget\n",
    "\n",
    "df['returns'] = df['revenue'] - df['budget']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "id": "d14f4ee0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                2387\n",
       "popularity        2387\n",
       "budget            2387\n",
       "revenue           2387\n",
       "original_title    2387\n",
       "runtime           2387\n",
       "release_date      2387\n",
       "vote_count        2387\n",
       "vote_average      2387\n",
       "release_year      2387\n",
       "release_month     2387\n",
       "returns           2387\n",
       "dtype: int64"
      ]
     },
     "execution_count": 247,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check if there is loss\n",
    "df_profit = df[df['returns'] > 0]\n",
    "df_loss = df[df['returns'] < 0]\n",
    "df_loss.count()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5779410f",
   "metadata": {},
   "source": [
    "Some Returns resulted in loss. because they are less than zero. Total number of 2387 rows resulted into loss."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 248,
   "id": "09d4716b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                4705\n",
       "popularity        4705\n",
       "budget            4705\n",
       "revenue           4705\n",
       "original_title    4705\n",
       "runtime           4705\n",
       "release_date      4705\n",
       "vote_count        4705\n",
       "vote_average      4705\n",
       "release_year      4705\n",
       "release_month     4705\n",
       "returns           4705\n",
       "dtype: int64"
      ]
     },
     "execution_count": 248,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check for zero returns. these are neither profit nor loss\n",
    "df[df['returns'] == 0].count()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9853e5a9",
   "metadata": {},
   "source": [
    "Some Returns resulted in zeros. Total number of 47055 rows resulted into zeros returns."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a41fb7a",
   "metadata": {},
   "source": [
    "##### Its shown that, there are losses. then it is easier to categorize into two variable columns. Profit or Loss Column, the zero returns will be categorized as Loss because to produced a movie, one or two expenses would have been made even without budget , like man powers. so having a zero returns is a Loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 249,
   "id": "165bd9a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-413912431"
      ]
     },
     "execution_count": 249,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check for minimum returns\n",
    "df.returns.min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 250,
   "id": "9feda444",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2544505847"
      ]
     },
     "execution_count": 250,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check for maximum returns\n",
    "df.returns.max()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f53a8a2d",
   "metadata": {},
   "source": [
    "Categorizing the returns column into 'Profit' and 'Loss'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 251,
   "id": "aa4f1429",
   "metadata": {},
   "outputs": [],
   "source": [
    "#i used 0.1 here because there columns with 0 returns. so i classify them as loss\n",
    "\n",
    "returns = [-413912431, 0.1, 2544505847]\n",
    "pnl = ['Loss', 'Profit']\n",
    "df['profit_or_loss'] = pd.cut(df['returns'], returns, labels=pnl)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 252,
   "id": "9a4d1250",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>runtime</th>\n",
       "      <th>release_date</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>release_month</th>\n",
       "      <th>returns</th>\n",
       "      <th>profit_or_loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>135397</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>150000000</td>\n",
       "      <td>1513528810</td>\n",
       "      <td>Jurassic World</td>\n",
       "      <td>124</td>\n",
       "      <td>2015-06-09</td>\n",
       "      <td>5562</td>\n",
       "      <td>6.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>June</td>\n",
       "      <td>1363528810</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>76341</td>\n",
       "      <td>28.419936</td>\n",
       "      <td>150000000</td>\n",
       "      <td>378436354</td>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>120</td>\n",
       "      <td>2015-05-13</td>\n",
       "      <td>6185</td>\n",
       "      <td>7.1</td>\n",
       "      <td>2015</td>\n",
       "      <td>May</td>\n",
       "      <td>228436354</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>262500</td>\n",
       "      <td>13.112507</td>\n",
       "      <td>110000000</td>\n",
       "      <td>295238201</td>\n",
       "      <td>Insurgent</td>\n",
       "      <td>119</td>\n",
       "      <td>2015-03-18</td>\n",
       "      <td>2480</td>\n",
       "      <td>6.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>March</td>\n",
       "      <td>185238201</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>140607</td>\n",
       "      <td>11.173104</td>\n",
       "      <td>200000000</td>\n",
       "      <td>2068178225</td>\n",
       "      <td>Star Wars: The Force Awakens</td>\n",
       "      <td>136</td>\n",
       "      <td>2015-12-15</td>\n",
       "      <td>5292</td>\n",
       "      <td>7.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>December</td>\n",
       "      <td>1868178225</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>168259</td>\n",
       "      <td>9.335014</td>\n",
       "      <td>190000000</td>\n",
       "      <td>1506249360</td>\n",
       "      <td>Furious 7</td>\n",
       "      <td>137</td>\n",
       "      <td>2015-04-01</td>\n",
       "      <td>2947</td>\n",
       "      <td>7.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>April</td>\n",
       "      <td>1316249360</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id  popularity     budget     revenue                original_title  \\\n",
       "0  135397   32.985763  150000000  1513528810                Jurassic World   \n",
       "1   76341   28.419936  150000000   378436354            Mad Max: Fury Road   \n",
       "2  262500   13.112507  110000000   295238201                     Insurgent   \n",
       "3  140607   11.173104  200000000  2068178225  Star Wars: The Force Awakens   \n",
       "4  168259    9.335014  190000000  1506249360                     Furious 7   \n",
       "\n",
       "   runtime release_date  vote_count  vote_average  release_year release_month  \\\n",
       "0      124   2015-06-09        5562           6.5          2015          June   \n",
       "1      120   2015-05-13        6185           7.1          2015           May   \n",
       "2      119   2015-03-18        2480           6.3          2015         March   \n",
       "3      136   2015-12-15        5292           7.5          2015      December   \n",
       "4      137   2015-04-01        2947           7.3          2015         April   \n",
       "\n",
       "      returns profit_or_loss  \n",
       "0  1363528810         Profit  \n",
       "1   228436354         Profit  \n",
       "2   185238201         Profit  \n",
       "3  1868178225         Profit  \n",
       "4  1316249360         Profit  "
      ]
     },
     "execution_count": 252,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c980824d",
   "metadata": {},
   "source": [
    "## Exploratory Data Analysis\n",
    "\n",
    "In this section, our inspected and cleaned dataset will be explored to answer some posed questions and also give it a visualization for better understanding."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "32249b0f",
   "metadata": {},
   "source": [
    "### Research Question 1: What is the trend of number of movies produced per year?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 253,
   "id": "5ab8d192",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create a variable yearly_movie and count the number of movies for each\n",
    "\n",
    "yearly_movie = df.groupby('release_year').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "id": "b13e7a6a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create a plot to visualize the trend of this record\n",
    "\n",
    "fig = plt.figure(figsize=(10,8))\n",
    "plt.plot(yearly_movie['id'].index, yearly_movie['id'].values)\n",
    "plt.xticks(np.arange(1960, 2020, 5))\n",
    "plt.title('Number Trend of Movies Per Year')\n",
    "plt.xlabel('Year of Production')\n",
    "plt.ylabel('Number of Movies Produced');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3d47b37",
   "metadata": {},
   "source": [
    "##### According to the visualization above, we can see that, as the year pass by, the number of movies produced keep increasing. Therefore the trend is INCREASING"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a8ba32f",
   "metadata": {},
   "source": [
    "### Research Question 2: Are there more Profits than Losses in the Dataset?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 255,
   "id": "d74b6c68",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Loss      7091\n",
       "Profit    3773\n",
       "Name: profit_or_loss, dtype: int64"
      ]
     },
     "execution_count": 255,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create value count for each return\n",
    "df['profit_or_loss'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "id": "ca3868fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "profit_num = df['profit_or_loss'].value_counts().values[0]\n",
    "loss_num = df['profit_or_loss'].value_counts().values[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 257,
   "id": "f7fd4fd7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create fig size for the plot\n",
    "fig = plt.figure(figsize=(8,6))\n",
    "\n",
    "#plotting variables/arguments\n",
    "locations = [1,2]\n",
    "labels = ['Profit', 'Loss']\n",
    "heights = [profit_num, loss_num]\n",
    "\n",
    "# creating a visualization using bar plot\n",
    "plt.bar(locations, heights, tick_label=labels, color=['#2b7bba', '#ff7c00'], alpha=0.9)\n",
    "plt.title('Number of Profit and Loss Returns')\n",
    "plt.xlabel('Returns')\n",
    "plt.ylabel('Number of Returns');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "577d709c",
   "metadata": {},
   "source": [
    "From the representation above, it shows this dataset consists of more profits(7091) than losses(3773). Meanwhile there are some rows with 0 returns. but i assumed them as loss, because producing a movie with 0 return is a total Loss."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b98b9393",
   "metadata": {},
   "source": [
    "### Research Question 3: What are the 10 longest movies and check if each make profits or loss?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "id": "0d847586",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>original_title</th>\n",
       "      <th>runtime</th>\n",
       "      <th>profit_or_loss</th>\n",
       "      <th>popularity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>The Story of Film: An Odyssey</td>\n",
       "      <td>900</td>\n",
       "      <td>Loss</td>\n",
       "      <td>0.006925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Taken</td>\n",
       "      <td>877</td>\n",
       "      <td>Loss</td>\n",
       "      <td>0.469332</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Band of Brothers</td>\n",
       "      <td>705</td>\n",
       "      <td>Profit</td>\n",
       "      <td>0.537593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Shoah</td>\n",
       "      <td>566</td>\n",
       "      <td>Loss</td>\n",
       "      <td>0.147489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>North and South, Book I</td>\n",
       "      <td>561</td>\n",
       "      <td>Loss</td>\n",
       "      <td>0.000065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Planet Earth</td>\n",
       "      <td>550</td>\n",
       "      <td>Loss</td>\n",
       "      <td>0.137913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>The Pacific</td>\n",
       "      <td>540</td>\n",
       "      <td>Loss</td>\n",
       "      <td>0.757082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>John Adams</td>\n",
       "      <td>501</td>\n",
       "      <td>Loss</td>\n",
       "      <td>0.136540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Life</td>\n",
       "      <td>500</td>\n",
       "      <td>Loss</td>\n",
       "      <td>0.102223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Generation Kill</td>\n",
       "      <td>470</td>\n",
       "      <td>Loss</td>\n",
       "      <td>0.336308</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  original_title  runtime profit_or_loss  popularity\n",
       "0  The Story of Film: An Odyssey      900           Loss    0.006925\n",
       "1                          Taken      877           Loss    0.469332\n",
       "2               Band of Brothers      705         Profit    0.537593\n",
       "3                          Shoah      566           Loss    0.147489\n",
       "4        North and South, Book I      561           Loss    0.000065\n",
       "5                   Planet Earth      550           Loss    0.137913\n",
       "6                    The Pacific      540           Loss    0.757082\n",
       "7                     John Adams      501           Loss    0.136540\n",
       "8                           Life      500           Loss    0.102223\n",
       "9                Generation Kill      470           Loss    0.336308"
      ]
     },
     "execution_count": 258,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create sub-dataset 'lm' consisting of columns(original_title, runtime and profit_or_loss)\n",
    "lm = df[['original_title', 'runtime', 'profit_or_loss', 'popularity']]\n",
    "\n",
    "#sorting the column runtime to extract 10 longest movies\n",
    "\n",
    "lm = lm.sort_values('runtime', ascending=False, ignore_index=True)\n",
    "lm.iloc[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "id": "bece3d6a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create canvas size\n",
    "plt.figure(figsize=(10,7))\n",
    "\n",
    "#visualize using seaborn scatterplot\n",
    "sns.scatterplot(x='runtime', y='original_title', data=lm.iloc[:10], hue='profit_or_loss')\n",
    "\n",
    "#set title and labels\n",
    "plt.title('10 Longest Movies')\n",
    "plt.xlabel('Runtime in Minutes')\n",
    "plt.ylabel('Title of Movie')\n",
    "plt.legend(loc='right');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3f82ccc",
   "metadata": {},
   "source": [
    "##### The 10 longest Movies run more than 7 hours(420 minutes), almost with Loss Returns and very low popularity. This could be seasonal movies and people dont want to invest so much time in movies with longer runtime"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94147a0d",
   "metadata": {},
   "source": [
    "### Research Question 4: What are the 10 most popular movies and their release dates, check also whether they end up in Profit or Loss ? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 260,
   "id": "39b42db7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>popularity</th>\n",
       "      <th>original_title</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>release_month</th>\n",
       "      <th>profit_or_loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>32.985763</td>\n",
       "      <td>Jurassic World</td>\n",
       "      <td>124</td>\n",
       "      <td>5562</td>\n",
       "      <td>6.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>June</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>28.419936</td>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>120</td>\n",
       "      <td>6185</td>\n",
       "      <td>7.1</td>\n",
       "      <td>2015</td>\n",
       "      <td>May</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>24.949134</td>\n",
       "      <td>Interstellar</td>\n",
       "      <td>169</td>\n",
       "      <td>6498</td>\n",
       "      <td>8.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>November</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>14.311205</td>\n",
       "      <td>Guardians of the Galaxy</td>\n",
       "      <td>121</td>\n",
       "      <td>5612</td>\n",
       "      <td>7.9</td>\n",
       "      <td>2014</td>\n",
       "      <td>July</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.112507</td>\n",
       "      <td>Insurgent</td>\n",
       "      <td>119</td>\n",
       "      <td>2480</td>\n",
       "      <td>6.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>March</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>12.971027</td>\n",
       "      <td>Captain America: The Winter Soldier</td>\n",
       "      <td>136</td>\n",
       "      <td>3848</td>\n",
       "      <td>7.6</td>\n",
       "      <td>2014</td>\n",
       "      <td>March</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>12.037933</td>\n",
       "      <td>Star Wars</td>\n",
       "      <td>121</td>\n",
       "      <td>4428</td>\n",
       "      <td>7.9</td>\n",
       "      <td>1977</td>\n",
       "      <td>March</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>11.422751</td>\n",
       "      <td>John Wick</td>\n",
       "      <td>101</td>\n",
       "      <td>2712</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>October</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>11.173104</td>\n",
       "      <td>Star Wars: The Force Awakens</td>\n",
       "      <td>136</td>\n",
       "      <td>5292</td>\n",
       "      <td>7.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>December</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10.739009</td>\n",
       "      <td>The Hunger Games: Mockingjay - Part 1</td>\n",
       "      <td>123</td>\n",
       "      <td>3590</td>\n",
       "      <td>6.6</td>\n",
       "      <td>2014</td>\n",
       "      <td>November</td>\n",
       "      <td>Profit</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   popularity                         original_title  runtime  vote_count  \\\n",
       "0   32.985763                         Jurassic World      124        5562   \n",
       "1   28.419936                     Mad Max: Fury Road      120        6185   \n",
       "2   24.949134                           Interstellar      169        6498   \n",
       "3   14.311205                Guardians of the Galaxy      121        5612   \n",
       "4   13.112507                              Insurgent      119        2480   \n",
       "5   12.971027    Captain America: The Winter Soldier      136        3848   \n",
       "6   12.037933                              Star Wars      121        4428   \n",
       "7   11.422751                              John Wick      101        2712   \n",
       "8   11.173104           Star Wars: The Force Awakens      136        5292   \n",
       "9   10.739009  The Hunger Games: Mockingjay - Part 1      123        3590   \n",
       "\n",
       "   vote_average  release_year release_month profit_or_loss  \n",
       "0           6.5          2015          June         Profit  \n",
       "1           7.1          2015           May         Profit  \n",
       "2           8.0          2014      November         Profit  \n",
       "3           7.9          2014          July         Profit  \n",
       "4           6.3          2015         March         Profit  \n",
       "5           7.6          2014         March         Profit  \n",
       "6           7.9          1977         March         Profit  \n",
       "7           7.0          2014       October         Profit  \n",
       "8           7.5          2015      December         Profit  \n",
       "9           6.6          2014      November         Profit  "
      ]
     },
     "execution_count": 260,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#sort the dataset by popularity\n",
    "sort_pop = df.sort_values('popularity',ascending=False, ignore_index=True)\n",
    "\n",
    "#grab the first 10 popular movies\n",
    "top_movies = sort_pop.iloc[:10][['popularity', 'original_title', 'runtime', 'vote_count', 'vote_average', 'release_year', 'release_month', 'profit_or_loss']]\n",
    "top_movies"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae8d23f0",
   "metadata": {},
   "source": [
    "##### Visualizing 10 most popular Movies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "id": "50fac5f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAwMAAAHsCAYAAACOr3FdAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAABeqklEQVR4nO3deXgNd///8dfJhkhISGy1VOylqmrfilKK2CpBiFpK1V1L3LQkgtr3tUW11Fp7au2i9L7lrtYWbS1tLbFVEUEijsh6zu8PX+fXNCEhJGKej+vqdfXMmfnMe9459915zXzmHJPVarUKAAAAgOHYZXcBAAAAALIHYQAAAAAwKMIAAAAAYFCEAQAAAMCgCAMAAACAQREGAAAAAIMiDAAAnjpWq1UffPCBlixZYluWnJysiRMnqmXLlmrevLnWrFmT5rbz589XhQoVtGnTphTLY2Nj9fLLL+udd9555Lo++ugj7dq1K9XyixcvqlKlSmrXrp3tn7Zt22rjxo2PvK8HCQkJydRxSNKIESNUoUIF7du3L8XyixcvqmLFiho3btwjjRsREaEuXbpkqjYAWcchuwsAAODvwsPD9eGHH+rIkSMqX768bfnatWt17tw5bd++Xbdv31bnzp1VuXJlVa1aNdUYxYoV05YtW/Tmm2/alu3cuVPOzs6Zqm3//v0qW7Zsmu/lzp1bW7Zssb2OiIhQmzZtVKVKFVWsWDFT+31S7vWpTp06tmWbN29WwYIFH3nMwoULa+3atY+jPABZgDsDAICnyurVq+Xj46OWLVumWL5r1y517NhRDg4Oyp8/v1q3bq2tW7emOUbDhg11+vRpXblyxbbsyy+/VNu2bW2vb926pWHDhqlNmzby9vbWtGnTlJSUJEmaN2+evL291bFjR/Xp00dXr17V6tWrdezYMU2bNk3fffddusdRuHBhlSpVSufOnZMkffzxx2rVqpW8vb01aNAgRUZGSpL8/f01efJkderUSa+99prmzZsn6e4V+pdfftk23j9f3/PLL7+oW7du8vHxUePGjRUYGGhb/9VXX1Xv3r3VokULXb16NdW2rVq10vfff6+4uDjbsq+//lpvvPGG7fWVK1fUv39/eXt7q02bNvrss88kSbNmzdL48eNt6+3Zs0c+Pj6p6ly4cKE6dOigdu3aacCAAYqIiJB0N5x16NBBHTt2lI+Pjw4ePJhuTwE8foQBAMBTZfTo0fL29k61/PLlyypatKjtdZEiRVKc7P+dg4OD3njjDVtYuHTpkm7fvq1y5crZ1pkwYYLc3Ny0bds2bdq0SSdOnNDSpUt1+fJlLV++XJs2bVJISIjq16+vI0eOqFu3bqpSpYref/99NW/ePN3j+Pnnn3XhwgW99NJL2rRpk/73v/9p48aN2rZtm8qVK6cRI0bY1j179qzWrFmjL7/8Ul999ZX+85//ZLhfK1as0KBBg7Rhwwbt2LFD33//vY4dOybp7on8gAED9O2336pQoUKpti1QoIBefvllff/995KkQ4cOqUyZMsqfP79tnWHDhql27dratm2b1qxZo61bt2rHjh3y8fHRjh07lJCQIOlu2PL19U0x/ubNm3Xy5Elt2LBBW7Zs0auvvqpRo0ZJkqZNm6YxY8YoJCREgwcP1v79+zN8zAAeH8IAACBHsFqtMplMKV7b2d3/P2Pt2rXTtm3bJElbtmxR+/btU7wfGhqq7t27y2QyycnJSV26dFFoaKgKFy6sihUrqkOHDpo6daoqVaqkZs2apVtfXFyc7XmBNm3aaNasWZo+fbqKFi2q0NBQdezY0TZNqUePHtq3b5/tRLpz585ydHRUvnz51LJlS/3www8Z7suUKVN069YtLVq0SB9++KHi4+MVGxsr6W4oqlat2gO3b9eunS00bd68WR06dLC9Fxsbq8OHD6tbt26SJFdXV3Xs2FGhoaEqUaKEKlSooO+//143b97Uvn371KpVqxRj/+c//9Gvv/6qN998U+3atdOqVat09uxZSVLr1q313nvvKSgoSDExMerbt2+GjxnA48MzAwCAHKFo0aIpprpcvXpVRYoUue/6VatWVXJysn7//Xd99dVXWrlype0KuCRZLJYU4cJisSgpKUl2dnZatWqVjh49qp9++kmTJk1Sw4YN9f777z+wvn8+M/B399vXPQ4O//8/x/dCjslkktVqtS1PTExMc+zu3burQoUKatiwod544w39+uuvtu2cnJxSjJ2W1157TePGjdPly5d18OBBjR071nZnwWKxpKjhn7X7+vpq8+bNun79upo1a6a8efMqKioqxbpvv/22/Pz8JEkJCQm6efOmJCkgIEBvvvmm9u7dq5CQEC1duvSJPXAN4P64MwAAyBFee+01bdq0SUlJSYqJidGOHTvSvWLfrl07TZo0SaVLl5abm1uK9xo0aKBVq1bJarUqISFB69evV7169fTHH3+oTZs2KlOmjN555x317NlTR48elSTZ29unOInPqIYNG2rTpk22K/YrV65UzZo15eTkJEnaunWrLBaLbt68qa+//lpNmzZVvnz5lJiYqNOnT0uSduzYkWrcmJgYHT16VMOGDdPrr7+uK1eu6MKFC7JYLBmuzcnJSc2bN9f777+vpk2bpggPLi4ueumll7R69WpJd5+z2Lx5s+rVqydJat68uY4fP67169enmiIk3e3xxo0bZTabJUlz587V+++/r6SkJDVt2lR37txR165dNWbMGJ04ccJ2pwRA1uHOAAAgR+jatasuXLigdu3aKTExUZ07d1atWrUeuE3btm01Z84cLViwINV7o0aN0oQJE+Tt7a3ExEQ1bNhQ/fv3l5OTk9544w29+eabcnZ2Vu7cuW3z3Js2bapZs2YpMTExxXSa9HTq1EmXL1+Wj4+PLBaLSpUqpRkzZtjej4uLU6dOnXT79m35+fmpbt26kqThw4erb9++KlCgQKoHqiUpX7586tevnzp06CBnZ2cVLlxY1atX1/nz51WiRIkM19euXTv5+fkpODg41XszZszQuHHjFBISooSEBNuD1dLdINGqVSv9+OOPaX6rk4+PjyIiIuTr6yuTyaSiRYtqypQpcnBwUGBgoIYNGyYHBweZTCZNmjTJFo4AZB2T9Z/3/wAAQJbx9/dXt27d0jzZB4AnjWlCAAAAgEFxZwAAAAAwKO4MAAAAAAZFGAAAAAAMijAAAAAAGBRfLQo8IqvVqqSkjH+XN1KytzcpOZlHljKDHmYO/cs8epg59C/z6GHGOTrap7mcMAA8IqtVio6Oze4yciw3N2f6l0n0MHPoX+bRw8yhf5lHDzPO09M1zeVMEwIAAAAMijAAAAAAGBS/MwA8IovFKjs7U3aXAQAAcqg78Ykyx8Rlyb7uN02IZwaAR2RnZ9Irw1dkdxkAACCHCpveQ2ZlTRi4H6YJAQAAAAZFGAAAAAAMijAAAAAAGBRhAAAAADAowgAAAABgUIQBAAAAwKAIAwAAAIBBEQYAAAAAgyIMAAAAAAZFGAAAAAAMijAAAAAAGBRhAAAAADAowgDS5e/vr/Dw8CzZ1+LFi3XkyJEHrpOQkKD69esrOTlZkvTzzz+rYsWKOnr0qCQpPj5eDRs2lMViSXd/+/fvV0BAQKrlAQEB2r9//yMcAQAAQM5BGMBTpV+/fqpateoD13FyclLFihX1+++/S5L27Nmjli1bas+ePZLuhoOaNWvKzo6PNwAAwINwtoQMmz9/vtasWSNJCg8Pl7+/vySpTZs2eu+99zR06FBduXJF/fv3V69evdShQwft2rVLkjR79mx17txZPj4+WrZsmSRp9erV8vHxUefOnTV16lRJ0ogRIxQaGqq4uDgFBASoc+fO6tixo37++ecUtdSvX1+HDh2SJO3bt0///ve/FRoaKkk6cOCAGjZsKEmaMmWKfHx85OPjo+XLl9v20b9/f3Xp0kUxMTG2MVevXq327durb9++On/+/JNoIQAAwFOFMIBMi42N1YABAzRr1iydOXNGvXr10ueff67g4GCtXr1akrR582bNmDFDq1evVu7cuSVJISEhCgoK0rp161SiRAklJSXZxly7dq2ee+45rVu3TlOmTNGvv/6aYp/16tVTWFiYrl27pjx58qhEiRKyWq26ceOGDh48qAYNGug///mPLl68qPXr1+uLL77Q9u3bdeLECUlSnTp1tHbtWuXLl0+SdOvWLa1YsULr16/XggULlJiYmBWtAwAAyFYO2V0Ank63b9+Wk5OTHB0dJUkmk+mB65cuXVqS5OnpqYULF2rjxo0ymUy2E/xZs2Zp1qxZunbtmu2q/eTJk7V06VLNmDFD1apVk9VqtY135swZNWrUSJJUvnx5lS9fPsX+KlSooHPnzul///ufbbwGDRpo//79SkhIkKenp8LDw1WjRg2ZTCY5OjrqpZdesj37cK/ev++vbNmycnJykqR0pypJksViVdj0HumuBwAAkJY78dl/8ZEwgDSNGDFC3bp1U61atXT9+nUVKFBAuXLlUmRkpCTp+PHjKda/Nz9/7ty58vHx0auvvqpNmzbpyy+/VEJCgr755hvNmjVLVqtVrVu3VuvWrbV+/Xp9+OGHypUrl/r06ZNiKlCZMmV09OhRNWvWTH/++afmzJmjmTNn2t43mUyqUKGCNmzYoHHjxkmSGjVqpGnTpqlWrVq2MUJCQtSzZ08lJibq559/VocOHWzb/12JEiV0+vRpxcXFydHRUb///rvatm2bbp8iI289bGvxf9zcnBUdHZvdZeRo9DBz6F/m0cPMoX+ZRw8zjzCANPXq1UsTJkxQrly51KFD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66+nGPdh6/gni8WqsOk9Hqr/AP6/O/EPP20QAPB43TcMfP3119qxY4cuXbqk119/XR9++KGKFy+eZYUVK1ZMv/32W4plf/75p65cuaJKlSrp6NGj2rdvn1xcXJSQkGBbp06dOpKkl19+WZMmTUqxvZub2323u6dixYqSpKJFi6Z6Pzw8XKdOndKUKVMkSSaTSWvWrLEFisqVK0uS8uXLpzJlytj+PT4+XidPntS+ffv09ddfS7o7DUqS3N3dU31D05kzZ9SoUSNJd+/OlC9fXhEREVq+fLl27twpFxcXJSUlZaSNqZQrV05OTne/e9bBwcF2XB9++KEkKTExUaVLl06xTf78+eXg4KDQ0FBVr15dktSoUSMdPnxYp06d0osvvphqPy+88IIkqUiRIrp27VqK906ePKnjx4/L399fkpSUlKRLly5JUqp9S9LPP/+sunXr6vXXX1dycrK2bNmikSNHauzYsSpbtqxcXFwkSTVr1tQPP/ygl156SZJ0+vRpValSRXZ2dnJxcVH58uUzVUdaIiNvZWg9pObm5qzo6NjsLiNHo4cAgMy6bxgICAiQl5eXKlasqJMnT2r27Nm292bOnPnEC2vSpIk++eQTde3aVSVLllRiYqKmTJmievXq6ffff5erq6vGjRun8+fPa/369bZpI8ePH1eNGjV0+PBhlStXTtLdk3aLxaKQkJD7bnfPg36ZbsOGDQoICFC3bt0kSZcuXVLnzp01YMCAdLf18vJS27Zt5e3trevXr2vDhg2SJDu71I9tlClTRkePHlWzZs30559/as6cOfLw8FC1atXk5+enffv22ebsP6y0aixdurSmTp2qYsWKKSwsTJGRkanWqV27tj777DO98847kqSGDRsqICBApUuXTvMY7rdvi8UiLy8v1a5dW+PHj5fFYtGCBQtsQTOt+nbs2KG8efMqICBA9vb2qlChgpycnFS8eHGFh4crNjZWzs7OOnDgQIqT+NKlS2vFihWyWCyKi4vT6dOnU4z7sHUAAAA8a+4bBlasWJGVdaTi4uKiKVOmaNSoUf/3a2q31aRJE/n5+en06dMaOnSowsLClCdPHpUqVUpXr16VJIWGhmr37t2yWCy2r0CtUaOG+vXrp9GjR993u/QkJCRox44d2rJli21ZsWLFVLFiRX377bfpbt+/f38FBQVp/fr1MpvND/zmnS5d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AAD8f0wTAgAAAAyKMAAAAAAYFGEAAAAAMCjCAAAAAGBQhAEAAADAoAgDAAAAgEERBgAAAACDIgwAAAAABkUYAAAAAAyKMAAAAAAYFGEAAAAAMCjCAAAAAGBQjz0MTJkyRf7+/mrZsqUaN24sf39/DRo0SPv371dAQMBDjxcSEqIZM2akWBYQEKD9+/c/rpIf2qpVq9S5c2d169ZN3bp108cff5xttdzTtGlTvf322ymWff7556pQocJDj1W/fv1Uy957772HHickJES7d+9+6O3SM2LECHl7e8vf31/+/v7y8/PTqVOnMrz9unXrlJiYmOZ73333nf79738/rlIBAACeag6Pe8ARI0ZIunsieObMGQ0bNkySsvXk/XH64osv9PPPP2vFihXKlSuXEhMTNWzYMP3www9q0KBBttYWERGhGzduqECBApKkPXv2KH/+/I9l7I8++uiht+nYseNj2Xdahg8frkaNGkm6e5xz587NcI2ffPKJ2rdvn2r5hAkT9MMPP6hSpUqPs1QAAICn1mMPAw9y/vx5vf3227px44aaNGmigQMH6sSJE5owYYIkyc3NTZMmTZKrq2uGxvt74IiPj9cbb7yh77//Xv7+/qpYsaJOnTols9msuXPn6rnnntPHH3+sXbt2qUCBArpz544GDx6sF154QUFBQYqKipIkjRo1ShUqVFCTJk3k5eUlLy8vBQUF2fb5xRdf2IKAJDk6OmrOnDkymUySpJkzZ+rYsWO6ffu2ypQpo8mTJ2v+/Pk6f/68oqKidPPmTfn5+Wnnzp06e/aspk6dqmrVqmnlypXavn27TCaTWrVqpR49emjnzp369NNP5eDgoOeee07Tpk3TmTNntGrVKo0dOzZVP1q0aKFvvvlGfn5+Cg8PV8mSJW1XzC9evKigoCAlJSXJZDJp1KhRqlixojZs2KA1a9bIYrHotdde08CBA23jzZo1S7du3dLo0aPVoEED7d2796F6e+DAAXl4eMjX11ejR4/WlStXFBUVpUaNGmnQoEFq0aKFNmzYIDc3N33xxReKjY1NdXcjI27evClnZ+cH9v/nn39WbGysvL29FRkZqYCAAC1YsCDFONWrV1ezZs20bt26h64BAAAgJ8rSMBAfH68FCxYoOTlZjRs31sCBAxUcHKxJkyapbNmy2rBhgz777LNU04m2b9+uX3/91fb69OnT6tKlywP3VbVqVQUFBWn27NnasWOHGjVqpP/973/auHGjEhMT5e3tLUlatGiR6tSpIz8/P507d04jR47UmjVrdPnyZYWEhMjd3T3FuNHR0bYr7999951WrFihuLg41ahRQ//617+UL18+ff7557JYLGrdurUiIiIkSblz59aSJUu0ePFi7dmzR4sWLdKmTZu0Y8cOubi46KuvvtIXX3whk8mknj17qkGDBtq+fbt69uyp1q1ba/PmzTKbzSpbtmyaQUCS2rRpo+DgYPn5+Wnr1q3y9va2TdOZNm2a/P391axZM/3+++8KDAzUp59+qk8//VRbt26Vk5OTpkyZotu3b0uSpk6dKpPJpDFjxjxyb++5fPmyqlWrJh8fH8XHx6tRo0YaMmSIvL29tWPHDnXr1k1bt259qLsP06dP16effio7OzsVKlRIw4cPl9lsvm//vby8NGrUKEnSkiVLNHv27FRjtmrV6qHuYFksVoVN75Hh9YHsdic+7elxAADjytIwUK5cOTk5Od3dscPdXYeHh+vDDz+UJCUmJqp06dKptmvTpo1tupGkNJ89sFqtKV6/8MILkqQiRYro2rVrCg8P14svvih7e3vZ29urSpUqkqSTJ09q3759+vrrryVJMTExkiR3d/dUQUCS8ubNq+joaLm5ual58+Zq3ry5QkND9dVXXylXrly6ceOGhg4dKmdnZ8XGxtrmpt+rx9XVVWXLlpUk5c+fX/Hx8Tp58qQuXbqknj17Srp7pfvChQsaOXKkPvnkE61Zs0ZeXl5q1qzZA/tbtGhRSXdPvg8fPqwhQ4bY3gsPD1fNmjUlSZUqVdKVK1f0559/qly5csqdO7ckKTAwUJJ07do1nThxQiVLlkxzPxnt7T1ubm46evSo9u3bJxcXFyUkJEiSOnXqpICAANWsWVMeHh7y8PCwbXP+/HnbyXvbtm3l4+OTYsy/TxO6JzEx8b79T+tz9ThERt56IuMagZubs6KjY7O7jByNHgIAMitLv03o3lSavytdurSmTp2qlStXavjw4Xr11VczPF6uXLkUGRkpSTp+/PgD1y1btqyOHj0qi8WihIQE/fbbb5LuXjHu2bOnVq5cqTlz5tiuatvZpd2abt26adKkSbYT2uTkZIWFhclkMik0NFSXL1/WrFmzNHToUMXFxdlCSlrHfo+Xl5fKli2rFStWaOXKlerYsaPKly+vdevWaeDAgVq1apWku3ci0tOqVStNmTJFL7/8cop9lilTRocOHZIk/f777/Lw8FDJkiV15swZ27EMGjRIERER8vDw0JIlS3T69GmFhoamu8/79faekJAQubq6aubMmerdu7etL8WKFZOrq6sWLVqkTp06pdimVKlSWrlypVauXJkqCNzPg/r/97+nyWSSxWLJ0JgAAADPsiy9M5CWsWPH6oMPPlBycrIkaeLEiRnetmHDhlqzZo26du2qypUrK2/evPddt0KFCnr11Vfl6+srd3d3OTo6ysHBQf3791dQUJDWr18vs9mc7rfm9OjRQ2vWrFGvXr1kZ2cns9msWrVqafjw4UpOTtaCBQvk6+srJycnlShRQlevXk33OCpWrKi6deuqa9euSkhIUNWqVVW4cGFVrVpVvXr1kpubm/LmzavGjRvr9OnT931mQJJatmypiRMnavPmzSmWv//++woODtbSpUuVlJSkiRMnqkCBAurbt6+6d+8uk8mkJk2aqHDhwpLunjBPmjRJffr00fr16x9Y//16e0/dunU1dOhQhYWFKU+ePCpVqpSuXr2qwoULy9fXVxMmTND06dPT7VN6qlatmqH+16hRQ/369dOKFSseGNIAAACedSbrP+fXPKOuX7+ub775Rt26dVNCQoJat26t5cuXq1ixYtldWo53v96uW7dOJUqUSHXV/++++uornTp1SoMHD87Cih8Pi8Wq69fN2V1GjsUUl8yjh5lD/zKPHmYO/cs8ephxnp5pf0FPtt8ZyCru7u46duyY3nzzTZlMJvn4+BAEHpO0evvTTz9p9+7dD3woeNasWTp06FCqb/UBAABA1jDMnQHgcePOQOZwNSfz6GHm0L/Mo4eZQ/8yjx5m3P3uDGTpA8QAAAAAnh6EAQAAAMCgCAMAAACAQREGAAAAAIMiDAAAAAAGRRgAAAAADIowAAAAABgUYQAAAAAwKMIAAAAAYFCEAQAAAMCgCAMAAACAQREGAAAAAIMiDAAAAAAGRRgAAAAADIowAAAAABiUyWq1WrO7CAAAAABZjzsDAAAAgEERBgAAAACDIgwAAAAABkUYAAAAAAyKMAAAAAAYFGEAAAAAMCiH7C4AyEksFovGjh2rEydOyMnJSRMmTFCpUqWyu6wcp3379nJ1dZUkFS9eXJMnT87minKGX3/9VTNmzNDKlSt1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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create canvas size\n",
    "fig = plt.figure(figsize=(10,8))\n",
    "\n",
    "#create a barh plot\n",
    "sns.barplot(x='popularity', y='original_title', hue='profit_or_loss', data=top_movies, orient='h', hue_order=['Profit', 'Loss'])\n",
    "\n",
    "#set title and labels\n",
    "plt.title('10 Most Popular Movies')\n",
    "plt.xlabel('Popularity')\n",
    "plt.ylabel('Movie Title')\n",
    "plt.legend(loc='right');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "daf8e224",
   "metadata": {},
   "source": [
    "###### 'Jurassic World' is the Most popular movie followed by 'Max Max; Fury Road' while 'The Hunger Game' is the 10th most popular movie. All the 10 most popular movies generated profitable Returns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f936fac4",
   "metadata": {},
   "source": [
    "### Research Question 5: What is the distribution of Average Returns by Months"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "id": "535295bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "release_month\n",
       "January      7.299410e+06\n",
       "February     1.523901e+07\n",
       "March        2.346622e+07\n",
       "April        1.986922e+07\n",
       "May          4.257437e+07\n",
       "June         5.279089e+07\n",
       "July         3.765463e+07\n",
       "August       1.566722e+07\n",
       "September    9.989658e+06\n",
       "October      1.416368e+07\n",
       "November     3.752400e+07\n",
       "December     3.931195e+07\n",
       "Name: returns, dtype: float64"
      ]
     },
     "execution_count": 262,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get the mean values of returns by month\n",
    "avg_monthly_returns = df.groupby('release_month').mean()['returns']\n",
    "\n",
    "#print avg_monthly_returns\n",
    "avg_monthly_returns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69c5d517",
   "metadata": {},
   "source": [
    "#### Create a Funtion to avoid Code Repitition "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "id": "0ba5b6e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#create a function that returns the index of a series\n",
    "def s_index(x):\n",
    "    index = x.index\n",
    "    return index\n",
    "\n",
    "#create a function that returns the values of a series\n",
    "\n",
    "def s_value(y):\n",
    "    values = y.values\n",
    "    return values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "id": "2f8812c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create the size of the plot\n",
    "fig = plt.figure(figsize=(12,7))\n",
    "\n",
    "#set location from 1-12, since we have just 12 months\n",
    "locations = np.arange(1,13,1)\n",
    "\n",
    "#create labels for x-axis(year) by calling the functon (s_index) created above\n",
    "labels= s_index(avg_monthly_returns)\n",
    "\n",
    "#create heights for each bar (returns) by calling the function (s_value)\n",
    "heights = s_value(avg_monthly_returns)\n",
    "    \n",
    "# create barh plot to visualize this reult\n",
    "plt.barh(locations, heights, tick_label=labels)\n",
    "\n",
    "#set title and labels\n",
    "plt.title('Average Returns by Month')\n",
    "plt.xlabel('Average Month Returns')\n",
    "plt.ylabel('Months');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d42fa83a",
   "metadata": {},
   "source": [
    "#### The Month of June has the highest monthly average returns, it can be deduced that the warm time of the year has high tendency to generate high returns on investment because people can leave there house to visit friends, cinemas and so on to make engagements. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3650894d",
   "metadata": {},
   "source": [
    "### Research Question 6:  What are the top 10 years with highest average Returns and the least 10 years with lowest Average Returns?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "id": "0a57dee9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# average returns by release year\n",
    "avg_returns = df.groupby('release_year').mean()\n",
    "\n",
    "#sorting the avg_returns in descending order for easy slicing\n",
    "s_avg_returns = avg_returns['returns'].sort_values(ascending=False)\n",
    "\n",
    "#create the variable of top 10 returns and lowest 10 returns by slicing \n",
    "h_returns = s_avg_returns.iloc[:10]\n",
    "l_returns = s_avg_returns.iloc[-10:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "id": "304dc60a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 792x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create size for the plot\n",
    "fig = plt.figure(figsize=(11,8))\n",
    "\n",
    "#set location from 1-10, since we are after top 10 values\n",
    "locations = np.arange(1,11)\n",
    "\n",
    "#create labels for x-axis(year) by calling the function s_index()\n",
    "labels= s_index(h_returns)\n",
    "\n",
    "#create heights for each bar (returns) by calling the function s_values()\n",
    "heights = s_value(h_returns)\n",
    "\n",
    "#create a bar plot to visualize this result\n",
    "plt.bar(locations, heights, tick_label=labels, width=0.5)\n",
    "\n",
    "#set title and labels\n",
    "plt.title('Top 10 Years by Average Returns')\n",
    "plt.xlabel('Years')\n",
    "plt.ylabel('Average Yearly Returns');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c42337a9",
   "metadata": {},
   "source": [
    "#### Year 1995 has the highest yearly average returns. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "id": "03d3721d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 792x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create size for the plot\n",
    "fig = plt.figure(figsize=(11,8))\n",
    "\n",
    "#set location from 1-10, since we are after top 10 values\n",
    "locations = np.arange(1,11)\n",
    "\n",
    "#create labels for x-axis(year) by calling the function s_index()\n",
    "labels= s_index(l_returns)\n",
    "\n",
    "#create heights for each bar (returns) by calling the function s_values()\n",
    "heights = s_value(l_returns)\n",
    "    \n",
    "#create a bar plot to visualize this result\n",
    "plt.bar(locations, heights, tick_label=labels, width=0.5, color='#ff7c00', alpha=0.9)\n",
    "\n",
    "#set title and labels\n",
    "plt.title('10 Years by Lowest Average Returns')\n",
    "plt.xlabel('Years')\n",
    "plt.ylabel('Average Yearly Returns');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "104f6f0b",
   "metadata": {},
   "source": [
    "#### Year 1966 has the lowest yearly average returns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de911fc8",
   "metadata": {},
   "source": [
    "### Research Question 7: Number of Movies Produced per Month grouped by return"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "id": "a127f3d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "September    1331\n",
       "October      1153\n",
       "December      985\n",
       "January       919\n",
       "August        918\n",
       "June          827\n",
       "March         822\n",
       "November      814\n",
       "May           809\n",
       "July          799\n",
       "April         797\n",
       "February      691\n",
       "Name: release_month, dtype: int64"
      ]
     },
     "execution_count": 268,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking for month with highest and lowest number of movie produced\n",
    "df['release_month'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17b3cf5e",
   "metadata": {},
   "source": [
    "##### it can be seen here that highest number of movies is produced in September while the least number of movies is produce in February"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "id": "b48be2a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create the size of plot\n",
    "fig = plt.figure(figsize=(12,7))\n",
    "\n",
    "# creating the plot to visualize the answer to the question\n",
    "sns.countplot(x='release_month', data=df, hue='profit_or_loss')\n",
    "\n",
    "# plot title and labels\n",
    "plt.title('Number of Movies Produced Per Month')\n",
    "plt.xlabel('Released Month')\n",
    "plt.ylabel('Number of Produced Movie');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "829be34a",
   "metadata": {},
   "source": [
    "##### According to the above visualization, it shows the distribution of number of movies produced each month grouped by returns(profit or loss). As earlier said, month of september has the highest production number of movies while February has the least production numbers. However, it shows there are more movies with profitable returns compared to the loss each month. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "71465926",
   "metadata": {},
   "source": [
    "### Research Question 8: What is the correllation between the following Numberical Columns?\n",
    "\n",
    "    >> Popularity\n",
    "    >> Budget\n",
    "    >> Runtime\n",
    "    >> Vote_count\n",
    "    >> Returns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "id": "7812ec32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>returns</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>popularity</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.545481</td>\n",
       "      <td>0.139032</td>\n",
       "      <td>0.800828</td>\n",
       "      <td>0.628997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>budget</th>\n",
       "      <td>0.545481</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.191300</td>\n",
       "      <td>0.632719</td>\n",
       "      <td>0.570222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>runtime</th>\n",
       "      <td>0.139032</td>\n",
       "      <td>0.191300</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.163273</td>\n",
       "      <td>0.136022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vote_count</th>\n",
       "      <td>0.800828</td>\n",
       "      <td>0.632719</td>\n",
       "      <td>0.163273</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.755908</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>returns</th>\n",
       "      <td>0.628997</td>\n",
       "      <td>0.570222</td>\n",
       "      <td>0.136022</td>\n",
       "      <td>0.755908</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            popularity    budget   runtime  vote_count   returns\n",
       "popularity    1.000000  0.545481  0.139032    0.800828  0.628997\n",
       "budget        0.545481  1.000000  0.191300    0.632719  0.570222\n",
       "runtime       0.139032  0.191300  1.000000    0.163273  0.136022\n",
       "vote_count    0.800828  0.632719  0.163273    1.000000  0.755908\n",
       "returns       0.628997  0.570222  0.136022    0.755908  1.000000"
      ]
     },
     "execution_count": 270,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create a sub_dataset corr containing the columns\n",
    "\n",
    "cor = df[['popularity', 'budget', 'runtime', 'vote_count', 'returns']]\n",
    "\n",
    "#create correlation table corr\n",
    "cor_table = cor.corr()\n",
    "\n",
    "#print cor_table\n",
    "cor_table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "id": "d3da1f32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#visualizing the correlation using seaborn Heatmap\n",
    "plt.figure(figsize=(10,10))\n",
    "sns.heatmap(cor_table, cmap='coolwarm', annot=True, annot_kws = { 'fontsize' : 12 })\n",
    "plt.title('Correlation Visualization');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eecb3899",
   "metadata": {},
   "source": [
    "This correlation chart shows the relationship between the represented columns. How they are related to one another other."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64125d1e",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "After engaging in all the necessary and required steps from data inspection, cleaning and exploration. The folowing conclusions are be inferred."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e84f282",
   "metadata": {},
   "source": [
    "- The number of Movies produced increases as the Year passes by, the lowest number Movies was produced in 1960, while the highest number of movies was produced in few years before 2015. A cause of this could have been technological advancement.\n",
    "- There are more profitable production than loss. Over 7000 movies yield prositive returns(Profits) of investment which is over 50% of the total productions, while less than 4000 productions yield negative returns(Loss)\n",
    "- The longer the runtime of a Movie, the returns is decreasing, 9 out of the ten longest movies yield negative returns(Loss).\n",
    "- The more popular a movie is, there is tendency it will yield positive return. According to this dataset, the 10 most popular movies yield positive Returns. \n",
    "- The month of June has the highest average return followed by May and December. \n",
    "- The Year 1995 has the highest average yearly generated Returns while the year 1966 has lowest yearly average generated Returns.\n",
    "- The month of September has the highest number of produced movies, in this month, most of the produced movies yield  more postively than negatively. While, the month of February has the lowest number of produced Movies, in this month also, most of the production yielded more positively (profits) than negatively(Loss).\n",
    "\n",
    "- Correlated columns: The columns are correlatively checked, some has very strong correaltions while some also have low correlations, below explains that better:\n",
    "    - Budget and Popularity (Moderately correlated)\n",
    "    - Budget and Vote counts (Strong correlated)\n",
    "    - Budget and Returns  (Moderately Correlated)\n",
    "    - Popularity and Vote counts (Very Strong Correlation)\n",
    "    - Vote counts and Return (Very Strong Correlation)\n",
    "    - Returns and Popularity (Strong Correlation)\n",
    "    - Popularity and Runtime (Low Correlation)\n",
    "    - Budget and Runtime (Low Correlation)\n",
    "    - Vote counts and Runtime (Low Correlation)\n",
    "    - Returns and Runtime (Low Correlation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa3f8863",
   "metadata": {},
   "source": [
    "## Limitation\n",
    "However, during the investigation of this Dataset, one or two hinderances are face. Those are listed below:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c682b303",
   "metadata": {},
   "source": [
    "- No detailed explanation of the column names, like vote_average, budget_adj, revenue_adj\n",
    "- Most of the columns with strings contains alot of null values which makes it harder to draw insights from them.\n",
    "- Some of 'id' contain the same 'imdb_id'"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
